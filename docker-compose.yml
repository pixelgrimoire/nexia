services:
  traefik:
    image: traefik:v3.0

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: nf_user
      POSTGRES_PASSWORD: nf_pass
      POSTGRES_DB: nexia
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-nf_user} -d $${POSTGRES_DB:-nexia}"]
      interval: 3s
      timeout: 5s
      retries: 10
      start_period: 5s

  redis:
    image: redis:7-alpine
    volumes:
      - redisdata:/data

  frontend:
    build: ./apps/frontend
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql+psycopg://nf_user:nf_pass@postgres:5432/nexia
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio12345
      - MINIO_BUCKET=nexia-uploads
    ports:
      - "8000:8000"

  migrator:
    image: python:3.12-slim
    working_dir: /work
    environment:
      - DATABASE_URL=postgresql+psycopg://nf_user:nf_pass@postgres:5432/nexia
    volumes:
      - ./:/work
    depends_on:
      postgres:
        condition: service_healthy
    command: bash -lc "set -e; python -m pip install --upgrade pip; pip install -q -r requirements-dev.txt; alembic upgrade head"

  webhook-receiver:
    build:
      context: .
      dockerfile: services/webhook-receiver/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WHATSAPP_APP_SECRET=dev_secret
      - WHATSAPP_VERIFY_TOKEN=change-me
    ports:
      - "8001:8000"

  messaging-gateway:
    build:
      context: .
      dockerfile: services/messaging-gateway/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WHATSAPP_FAKE_MODE=true

  messaging-worker:
    build:
      context: .
      dockerfile: services/messaging-gateway/Dockerfile
    command: ["python", "-m", "worker.send_worker"]
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WHATSAPP_FAKE_MODE=true
    depends_on:
      - redis

  flow-engine:
    build:
      context: .
      dockerfile: services/flow-engine/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0

  flow-worker:
    build:
      context: .
      dockerfile: services/flow-engine/Dockerfile
    command: ["python", "-m", "worker.engine_worker"]
    environment:
      - REDIS_URL=redis://redis:6379/0
      - NLP_SERVICE_URL=http://nlp:8000
    depends_on:
      - redis

  contacts:
    build:
      context: .
      dockerfile: services/contacts/Dockerfile
    environment:
      - CONTACTS_SKIP_DDL=true
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  analytics:
    build:
      context: .
      dockerfile: services/analytics/Dockerfile

  nlp:
    build:
      context: .
      dockerfile: services/nlp/Dockerfile
    environment:
      - NLP_MIN_SCORE=0.32
    ports:
      - "8004:8000"
    restart: unless-stopped


  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio12345
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data

  webhook-dispatcher:
    build:
      context: .
      dockerfile: services/webhook-dispatcher/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
